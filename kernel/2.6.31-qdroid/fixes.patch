commit 72a32cd08209125a89db03668e581ba9fcd9dba1
Author: root <root@epsybox.(none)>
Date:   Thu Jun 17 14:41:52 2010 +0200

    fix gpio

diff --git a/drivers/char/smartq_gpio.c b/drivers/char/smartq_gpio.c
index 8a26cb1..354aa6d 100755
--- a/drivers/char/smartq_gpio.c
+++ b/drivers/char/smartq_gpio.c
@@ -24,6 +24,7 @@
 #include <linux/platform_device.h>
 #include <linux/workqueue.h>
 #include <linux/sysfs.h>
+#include <linux/sysdev.h>
 #include <linux/fs.h>
 #include <linux/gpio_keys.h>
 #include <linux/delay.h>
@@ -46,6 +47,12 @@ static unsigned int system_flag = 1;
 static struct delayed_work headp_detect_work;
 static int user_disable_speaker = 0;
 
+unsigned long rtc_wakeup_time = 30 * 60;
+EXPORT_SYMBOL(rtc_wakeup_time);
+
+unsigned int wakeup_status = 0;	// 0: waked up by external IRQ; 1: waked up by RTC
+EXPORT_SYMBOL(wakeup_status);
+
 /*           #################     setting     ##################        */
 
 // HHTECH set system power enable
@@ -136,16 +143,18 @@ extern void mmc_detect_change(struct mmc_host *host, unsigned long delay);
 static void set_wifi_en(int sw)
 {
 	if (sw) {
-        		gpio_direction_output(GPIO_WIFI_EN, 1);		/* open */
-        		gpio_direction_output(GPIO_WIFI_RESET, 0);
-        		mdelay(100);
-        		gpio_direction_output(GPIO_WIFI_RESET, 1);
-		if (!!g_wifi_host)
-			mmc_detect_change(g_wifi_host, 0);
+		gpio_direction_output(GPIO_WIFI_EN, 1);		/* open */
+		gpio_direction_output(GPIO_WIFI_RESET, 0);
+		mdelay(100);
+		gpio_direction_output(GPIO_WIFI_RESET, 1);
+//		if (!!g_wifi_host)
+//			mmc_detect_change(g_wifi_host, 0);
 	} else {
 	    	gpio_direction_output(GPIO_WIFI_EN, 0);		/* close */
 	}
 }
+EXPORT_SYMBOL_GPL(set_wifi_en);
+
 
 // HHTECH set led1 and led2 
 void set_led1_en(int sw)
@@ -169,7 +178,7 @@ EXPORT_SYMBOL_GPL(set_led2_en);
 /*@@@@@@@@@@@@@@@@@@@@@@@	sysfs interface   @@@@@@@@@@@*/
 
 #ifdef CONFIG_SYSFS
-static ssize_t hhtech_sysfs_show_dc(struct device *dev,
+static ssize_t smartq_sysfs_show_dc(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 #if defined (CONFIG_LCD_4)
@@ -181,7 +190,7 @@ static ssize_t hhtech_sysfs_show_dc(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_show_sd(struct device *dev,
+static ssize_t smartq_sysfs_show_sd(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	strcpy(buf, gpio_get_value(GPIO_SD_WP) ? "off" : "on");
@@ -189,7 +198,14 @@ static ssize_t hhtech_sysfs_show_sd(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_show_system_flag(struct device *dev,
+static ssize_t smartq_sysfs_show_smartq_flag(struct device *dev,
+					     struct device_attribute *attr, char *buf)
+{
+	strcpy(buf, system_flag ? "SmartQ7\n" : "SmartQ5\n");
+	return strlen(buf);
+}
+
+static ssize_t smartq_sysfs_show_system_flag(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	strcpy(buf, system_flag ? "1" : "0");
@@ -197,7 +213,7 @@ static ssize_t hhtech_sysfs_show_system_flag(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_show_headp(struct device *dev,
+static ssize_t smartq_sysfs_show_headp(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	strcpy(buf, gpio_get_value(GPIO_HEADPHONE_S) ? "on" : "off");
@@ -205,7 +221,7 @@ static ssize_t hhtech_sysfs_show_headp(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_show_blight_s(struct device *dev,
+static ssize_t smartq_sysfs_show_blight_s(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	strcpy(buf, gpio_get_value(GPIO_LCD_BLIGHT_S) ? "on" : "off");
@@ -214,7 +230,7 @@ static ssize_t hhtech_sysfs_show_blight_s(struct device *dev,
 }
 
 extern unsigned int get_s3c_adc_value(unsigned int s3c_adc_port);
-static ssize_t hhtech_sysfs_show_battery(struct device *dev,
+static ssize_t smartq_sysfs_show_battery(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	int battery_life = 0, reference_value = 0;
@@ -246,7 +262,7 @@ static ssize_t hhtech_sysfs_show_battery(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_show_usbhost(struct device *dev,
+static ssize_t smartq_sysfs_show_usbhost(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	strcpy(buf, gpio_get_value(GPIO_USB_HOST_STATUS) ? "on" : "off");
@@ -254,7 +270,7 @@ static ssize_t hhtech_sysfs_show_usbhost(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_show_usbotg(struct device *dev,
+static ssize_t smartq_sysfs_show_usbotg(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	strcpy(buf, gpio_get_value(GPIO_USB_OTG_STATUS) ? "on" : "off");
@@ -262,7 +278,7 @@ static ssize_t hhtech_sysfs_show_usbotg(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t hhtech_sysfs_charge_s(struct device *dev,
+static ssize_t smartq_sysfs_charge_s(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	int s=(gpio_get_value(GPIO_CHARG_S1)<<1) + gpio_get_value(GPIO_CHARG_S2);
@@ -284,12 +300,12 @@ static ssize_t hhtech_sysfs_charge_s(struct device *dev,
 	return strlen(buf);
 }
 
-static int hhtech_sysfs_show_power(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_power(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_PWR_EN));
 }
 
-static ssize_t hhtech_sysfs_store_power(struct device *dev,
+static ssize_t smartq_sysfs_store_power(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -304,12 +320,12 @@ static ssize_t hhtech_sysfs_store_power(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_charge(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_charge(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_CHARGER_EN));
 }
 
-static ssize_t hhtech_sysfs_store_charge(struct device *dev,
+static ssize_t smartq_sysfs_store_charge(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -324,12 +340,12 @@ static ssize_t hhtech_sysfs_store_charge(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_blight(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_blight(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_LCD_BLIGHT_EN));
 }
 
-static ssize_t hhtech_sysfs_store_blight(struct device *dev,
+static ssize_t smartq_sysfs_store_blight(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -344,12 +360,12 @@ static ssize_t hhtech_sysfs_store_blight(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_amp(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_amp(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_VIDEOAMP_EN));
 }
 
-static ssize_t hhtech_sysfs_store_amp(struct device *dev,
+static ssize_t smartq_sysfs_store_amp(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -364,12 +380,12 @@ static ssize_t hhtech_sysfs_store_amp(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_usbpwr(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_usbpwr(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_USB_EN));
 }
 
-static ssize_t hhtech_sysfs_store_usbpwr(struct device *dev,
+static ssize_t smartq_sysfs_store_usbpwr(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -384,12 +400,12 @@ static ssize_t hhtech_sysfs_store_usbpwr(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_usbhostpwr(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_usbhostpwr(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_USB_HOSTPWR_EN));
 }
 
-static ssize_t hhtech_sysfs_store_usbhostpwr(struct device *dev,
+static ssize_t smartq_sysfs_store_usbhostpwr(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -404,12 +420,12 @@ static ssize_t hhtech_sysfs_store_usbhostpwr(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_usbotgdrv(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_usbotgdrv(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_USB_OTGDRV_EN));
 }
 
-static ssize_t hhtech_sysfs_store_usbotgdrv(struct device *dev,
+static ssize_t smartq_sysfs_store_usbotgdrv(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -424,12 +440,12 @@ static ssize_t hhtech_sysfs_store_usbotgdrv(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_speaker(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_speaker(struct device *dev, struct device_attribute *attr, char *buf)
 {
 	return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_SPEAKER_EN));
 }
 
-static ssize_t hhtech_sysfs_store_speaker(struct device *dev,
+static ssize_t smartq_sysfs_store_speaker(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -449,12 +465,12 @@ static ssize_t hhtech_sysfs_store_speaker(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_wifi(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_wifi(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_WIFI_EN));
 }
 
-static ssize_t hhtech_sysfs_store_wifi(struct device *dev,
+static ssize_t smartq_sysfs_store_wifi(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -469,12 +485,12 @@ static ssize_t hhtech_sysfs_store_wifi(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_led1(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_led1(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_LED1_EN));
 }
 
-static ssize_t hhtech_sysfs_store_led1(struct device *dev,
+static ssize_t smartq_sysfs_store_led1(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -489,12 +505,12 @@ static ssize_t hhtech_sysfs_store_led1(struct device *dev,
 	return len;
 }
 
-static int hhtech_sysfs_show_led2(struct device *dev, struct device_attribute *attr, char *buf)
+static int smartq_sysfs_show_led2(struct device *dev, struct device_attribute *attr, char *buf)
 {
         return snprintf(buf, PAGE_SIZE, "%d\n", gpio_get_value(GPIO_LED2_EN));
 }
 
-static ssize_t hhtech_sysfs_store_led2(struct device *dev,
+static ssize_t smartq_sysfs_store_led2(struct device *dev,
 				struct device_attribute *attr, const char *buf, size_t len)
 {
         if (len < 1)
@@ -510,6 +526,32 @@ static ssize_t hhtech_sysfs_store_led2(struct device *dev,
 }
 
 
+
+static int smartq_sysfs_show_rtc_wk_time(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	return snprintf(buf, PAGE_SIZE, "%lu\n", rtc_wakeup_time);
+}
+
+static ssize_t smartq_sysfs_store_rtc_wk_time(struct device *dev,
+					      struct device_attribute *attr, const char *buf, size_t len)
+{
+	unsigned long value = simple_strtoul(buf, NULL, 10);
+
+	if (len < 1)
+		return -EINVAL;
+
+	if (value < 0 || value > 2 * 60 * 60)
+		return -ERANGE;
+	else
+		rtc_wakeup_time	= value;
+	return len;
+}
+
+static int smartq_sysfs_show_wk_status(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	return snprintf(buf, PAGE_SIZE, "%d\n", wakeup_status);
+}
+
 #if defined (CONFIG_LCD_7)  && 0
 /*   USB host protect status change Interrupt handle  */
 static irqreturn_t usbhost_status_irq(int irq, void *dev_id)
@@ -575,29 +617,33 @@ static irqreturn_t headp_irq(int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
-
-static DEVICE_ATTR(system_flag, 0444, hhtech_sysfs_show_system_flag, NULL);
-static DEVICE_ATTR(headphone_s, 0444, hhtech_sysfs_show_headp, NULL);
-static DEVICE_ATTR(dc_s, 0444, hhtech_sysfs_show_dc, NULL);
-static DEVICE_ATTR(sd_s, 0444, hhtech_sysfs_show_sd, NULL);
-static DEVICE_ATTR(charge_s, 0444,hhtech_sysfs_charge_s , NULL);
-static DEVICE_ATTR(backlight_s, 0444, hhtech_sysfs_show_blight_s, NULL);
-static DEVICE_ATTR(usbhost_s, 0444, hhtech_sysfs_show_usbhost, NULL);
-static DEVICE_ATTR(usbotg_s, 0444, hhtech_sysfs_show_usbotg, NULL);
-static DEVICE_ATTR(battery_s, 0444, hhtech_sysfs_show_battery, NULL);
-static DEVICE_ATTR(pwr_en, 0666, hhtech_sysfs_show_power, hhtech_sysfs_store_power);
-static DEVICE_ATTR(charge_en, 0666, hhtech_sysfs_show_charge, hhtech_sysfs_store_charge);
-static DEVICE_ATTR(backlight_en, 0666,hhtech_sysfs_show_blight, hhtech_sysfs_store_blight);
-static DEVICE_ATTR(amp_en, 0666,hhtech_sysfs_show_amp, hhtech_sysfs_store_amp);
-static DEVICE_ATTR(usbpwr_en, 0666, hhtech_sysfs_show_usbpwr, hhtech_sysfs_store_usbpwr);
-static DEVICE_ATTR(usbhostpwr_en, 0666, hhtech_sysfs_show_usbhostpwr, hhtech_sysfs_store_usbhostpwr);
-static DEVICE_ATTR(usbotgdrv_en, 0666, hhtech_sysfs_show_usbotgdrv, hhtech_sysfs_store_usbotgdrv);
-static DEVICE_ATTR(speaker_en, 0666, hhtech_sysfs_show_speaker, hhtech_sysfs_store_speaker);
-static DEVICE_ATTR(wifi_en, 0666, hhtech_sysfs_show_wifi, hhtech_sysfs_store_wifi);
-static DEVICE_ATTR(led1_en, 0666, hhtech_sysfs_show_led1, hhtech_sysfs_store_led1);
-static DEVICE_ATTR(led2_en, 0666, hhtech_sysfs_show_led2, hhtech_sysfs_store_led2);
+static DEVICE_ATTR(SmartQ5, 0444, smartq_sysfs_show_smartq_flag, NULL);
+static DEVICE_ATTR(SmartQ7, 0444, smartq_sysfs_show_smartq_flag, NULL);
+static DEVICE_ATTR(system_flag, 0444, smartq_sysfs_show_system_flag, NULL);
+static DEVICE_ATTR(headphone_s, 0444, smartq_sysfs_show_headp, NULL);
+static DEVICE_ATTR(dc_s, 0444, smartq_sysfs_show_dc, NULL);
+static DEVICE_ATTR(sd_s, 0444, smartq_sysfs_show_sd, NULL);
+static DEVICE_ATTR(charge_s, 0444,smartq_sysfs_charge_s , NULL);
+static DEVICE_ATTR(backlight_s, 0444, smartq_sysfs_show_blight_s, NULL);
+static DEVICE_ATTR(usbhost_s, 0444, smartq_sysfs_show_usbhost, NULL);
+static DEVICE_ATTR(usbotg_s, 0444, smartq_sysfs_show_usbotg, NULL);
+static DEVICE_ATTR(battery_s, 0444, smartq_sysfs_show_battery, NULL);
+static DEVICE_ATTR(pwr_en, 0666, smartq_sysfs_show_power, smartq_sysfs_store_power);
+static DEVICE_ATTR(charge_en, 0666, smartq_sysfs_show_charge, smartq_sysfs_store_charge);
+static DEVICE_ATTR(backlight_en, 0666,smartq_sysfs_show_blight, smartq_sysfs_store_blight);
+static DEVICE_ATTR(amp_en, 0666,smartq_sysfs_show_amp, smartq_sysfs_store_amp);
+static DEVICE_ATTR(usbpwr_en, 0666, smartq_sysfs_show_usbpwr, smartq_sysfs_store_usbpwr);
+static DEVICE_ATTR(usbhostpwr_en, 0666, smartq_sysfs_show_usbhostpwr, smartq_sysfs_store_usbhostpwr);
+static DEVICE_ATTR(usbotgdrv_en, 0666, smartq_sysfs_show_usbotgdrv, smartq_sysfs_store_usbotgdrv);
+static DEVICE_ATTR(speaker_en, 0666, smartq_sysfs_show_speaker, smartq_sysfs_store_speaker);
+static DEVICE_ATTR(wifi_en, 0666, smartq_sysfs_show_wifi, smartq_sysfs_store_wifi);
+static DEVICE_ATTR(led1_en, 0666, smartq_sysfs_show_led1, smartq_sysfs_store_led1);
+static DEVICE_ATTR(led2_en, 0666, smartq_sysfs_show_led2, smartq_sysfs_store_led2);
+static DEVICE_ATTR(rtc_wk_time, 0666, smartq_sysfs_show_rtc_wk_time, smartq_sysfs_store_rtc_wk_time);
+static DEVICE_ATTR(wk_status, 0666, smartq_sysfs_show_wk_status, NULL);
 
 static struct attribute *attrs[] = {
+	&dev_attr_SmartQ5.attr,  /* must be zero-th element */
 	&dev_attr_system_flag.attr,
 	&dev_attr_headphone_s.attr,
 	&dev_attr_dc_s.attr,
@@ -618,6 +664,8 @@ static struct attribute *attrs[] = {
 	&dev_attr_wifi_en.attr,
 	&dev_attr_led1_en.attr,
 	&dev_attr_led2_en.attr,
+	&dev_attr_rtc_wk_time.attr,
+	&dev_attr_wk_status.attr,
 	NULL,
 };
 
@@ -625,37 +673,42 @@ static struct attribute_group attr_group = {
 	.attrs = attrs,
 };
 
-static int hhtech_gpio_sysfs_register(struct device* dev)
+static int smartq_gpio_sysfs_register(struct device* dev)
 {
+	if (system_flag)  /* default is SmartQ5 */
+	{
+	   attrs[0] = &dev_attr_SmartQ7.attr;
+	}
 	return sysfs_create_group(&dev->kobj, &attr_group);
 }
 #else
-static int hhtech_gpio_sysfs_register(struct device* dev)
+static int smartq_gpio_sysfs_register(struct device* dev)
 {
 	return 0;
 }
 #endif
 
-static int hhtech_gpio_probe(struct platform_device *pdev)
+static int smartq_gpio_probe(struct platform_device *pdev)
 {
 	int retval;
 
-	printk(KERN_INFO"smartQ5/7 gpio driver probe!\n");
+	printk(KERN_INFO"SmartQ gpio driver probe!\n");
 	
-	retval = hhtech_gpio_sysfs_register(&pdev->dev);
+	retval = smartq_gpio_sysfs_register(&pdev->dev);
 	if (retval < 0) {
-		printk(KERN_ERR "Create sys fs fail\n");
-		return -1;
+		printk(KERN_ERR "SmartQ gpio: Create sys fs fail\n");
+//		return -1;
 	}
 	
 	gpio_direction_input(GPIO_SD_WP);					/* S3C_GPK0 */
 	s3c_gpio_setpull(GPIO_SD_WP, S3C_GPIO_PULL_NONE);
 	
-#if defined (CONFIG_LCD_7)
+//#if defined (CONFIG_LCD_7)
 	gpio_direction_input(GPIO_USB_HOST_STATUS);		/* S3C_GPL10 */
 	s3c_gpio_setpull(GPIO_USB_HOST_STATUS, S3C_GPIO_PULL_NONE);
 	s3c_gpio_cfgpin(GPIO_USB_HOST_STATUS, S3C_GPIO_SFN(3));
-#endif
+//#endif
+	
 	gpio_direction_input(GPIO_USB_OTG_STATUS);		/* S3C_GPL11 */
 	s3c_gpio_setpull(GPIO_USB_OTG_STATUS, S3C_GPIO_PULL_NONE);
 	s3c_gpio_cfgpin(GPIO_USB_OTG_STATUS, S3C_GPIO_SFN(3));
@@ -663,21 +716,25 @@ static int hhtech_gpio_probe(struct platform_device *pdev)
 	s3c_gpio_setpull(GPIO_HEADPHONE_S, S3C_GPIO_PULL_NONE);
 	s3c_gpio_cfgpin(GPIO_HEADPHONE_S, S3C_GPIO_SFN(3));
 
+	gpio_direction_input(GPIO_DC_DETE);		//S3C_GPL13
+	gpio_direction_input(GPIO_PWR_HOLD);	//S3C_GPL14
+	
 	gpio_direction_input(GPIO_CHARG_S1);				/* S3C_GPK4 */
 	s3c_gpio_setpull(GPIO_CHARG_S1, S3C_GPIO_PULL_NONE);
 	gpio_direction_input(GPIO_CHARG_S2);				/* S3C_GPK5 */
 	s3c_gpio_setpull(GPIO_CHARG_S2, S3C_GPIO_PULL_NONE);
-#if defined (CONFIG_LCD_4)
-	gpio_direction_output(GPIO_USB_EN, 0);				/* S3C_GPL0	: close */
-	gpio_set_value(GPIO_USB_EN, 0);
-	gpio_direction_output(GPIO_USB_HOSTPWR_EN, 0);	/* S3C_GPL1	: close */
-	gpio_set_value(GPIO_USB_HOSTPWR_EN, 0);
-#else
+	
+//#if defined (CONFIG_LCD_4)
+//	gpio_direction_output(GPIO_USB_EN, 0);				/* S3C_GPL0	: close */
+//	gpio_set_value(GPIO_USB_EN, 0);
+//	gpio_direction_output(GPIO_USB_HOSTPWR_EN, 0);	/* S3C_GPL1	: close */
+//	gpio_set_value(GPIO_USB_HOSTPWR_EN, 0);
+//#else
 	gpio_direction_output(GPIO_USB_EN, 1);				/* S3C_GPL0	: open */
 	gpio_set_value(GPIO_USB_EN, 1);
 	gpio_direction_output(GPIO_USB_HOSTPWR_EN, 1);	/* S3C_GPL1	: open */
 	gpio_set_value(GPIO_USB_HOSTPWR_EN, 1);
-#endif
+//#endif
 
 	gpio_direction_output(GPIO_PWR_EN, 0);				/* S3C_GPK15 : open normal it's low */
 	gpio_direction_output(GPIO_VIDEOAMP_EN, 0);		/* S3C_GPK13 : close */
@@ -690,6 +747,9 @@ static int hhtech_gpio_probe(struct platform_device *pdev)
 	
 	set_wifi_en(0);
 	
+set_usb_hostpwr_en(1);
+set_usb_syspwr_en(1);
+
 #ifdef CONFIG_SOUND	
 	INIT_DELAYED_WORK(&headp_detect_work, headp_update_volume);
 #endif
@@ -719,10 +779,14 @@ static int hhtech_gpio_probe(struct platform_device *pdev)
 #endif	
 #endif
 
+	printk(KERN_INFO"SmartQ gpio driver probe done !\n");
+	
 	return 0;
 
+#if 0
 error3:
 	free_irq(gpio_to_irq(GPIO_USB_OTG_STATUS), NULL);
+#endif	
 error2:
 	free_irq(gpio_to_irq(GPIO_HEADPHONE_S), NULL);
 error1:
@@ -731,7 +795,7 @@ error1:
 	return 0;
 }
 
-static int hhtech_gpio_remove(struct platform_device *dev)
+static int smartq_gpio_remove(struct platform_device *dev)
 {
 
 	free_irq(gpio_to_irq(GPIO_HEADPHONE_S), NULL);
@@ -745,48 +809,48 @@ static int hhtech_gpio_remove(struct platform_device *dev)
 
 #ifdef CONFIG_PM
 static int wifi_old_state = 0;
-static int hhtech_gpio_suspend(struct platform_device *dev, pm_message_t state)
+static int smartq_gpio_suspend(struct platform_device *dev, pm_message_t state)
 {
 	wifi_old_state = gpio_get_value(GPIO_WIFI_EN);
 	set_wifi_en(0);
         	return 0;
 }
 
-static int hhtech_gpio_resume(struct platform_device *dev)
+static int smartq_gpio_resume(struct platform_device *dev)
 {
         set_wifi_en(wifi_old_state);
         return 0;
 }
 #else
-#define hhtech_gpio_suspend NULL
-#define hhtech_gpio_resume NULL
+#define smartq_gpio_suspend NULL
+#define smartq_gpio_resume NULL
 #endif
 
 
-static struct platform_driver hhtech_gpio = {
-        .probe = hhtech_gpio_probe,
-        .remove = hhtech_gpio_remove,
-        .suspend = hhtech_gpio_suspend,
-        .resume = hhtech_gpio_resume,
+static struct platform_driver smartq_gpio = {
+        .probe = smartq_gpio_probe,
+        .remove = smartq_gpio_remove,
+        .suspend = smartq_gpio_suspend,
+        .resume = smartq_gpio_resume,
         .driver =  {
                 .name = "smartq_gpio",
                 .owner = THIS_MODULE,
         },
 };
 
-static int __init hhtech_gpio_init(void)
+static int __init smartq_gpio_init(void)
 {
 	user_disable_speaker = 0;
-        return platform_driver_register(&hhtech_gpio);
+        return platform_driver_register(&smartq_gpio);
 }
 
-static void __exit hhtech_gpio_exit(void)
+static void __exit smartq_gpio_exit(void)
 {
-        platform_driver_unregister(&hhtech_gpio);
+        platform_driver_unregister(&smartq_gpio);
 }
 
-module_init(hhtech_gpio_init);
-module_exit(hhtech_gpio_exit);
+module_init(smartq_gpio_init);
+module_exit(smartq_gpio_exit);
 
 
 MODULE_AUTHOR("Wangkang");
diff --git a/drivers/net/usb/plusb.c b/drivers/net/usb/plusb.c
index 08555f8..d5da740 100755
--- a/drivers/net/usb/plusb.c
+++ b/drivers/net/usb/plusb.c
@@ -117,6 +117,9 @@ static const struct usb_device_id	products [] = {
 }, {
 	USB_DEVICE(0x067b, 0x0001),	// PL-2302
 	.driver_info =	(unsigned long) &prolific_info,
+}, {
+        USB_DEVICE(0x067b, 0x2501),     // PL-2501
+        .driver_info =  (unsigned long) &prolific_info,
 },
 
 	{ },		// END
diff --git a/drivers/usb/gadget/Makefile b/drivers/usb/gadget/Makefile
index 220c42f..d2cdf99 100755
--- a/drivers/usb/gadget/Makefile
+++ b/drivers/usb/gadget/Makefile
@@ -26,9 +26,9 @@ endif
 obj-$(CONFIG_USB_M66592)	+= m66592-udc.o
 obj-$(CONFIG_USB_FSL_QE)	+= fsl_qe_udc.o
 obj-$(CONFIG_USB_CI13XXX)	+= ci13xxx_udc.o
-obj-$(CONFIG_USB_S3C_HSOTG)	+= s3c-hsotg.o
+#obj-$(CONFIG_USB_S3C_HSOTG)	+= s3c-hsotg.o
+obj-$(USB_GADGET_S3C_OTGD)	+= s3c-hsotg.o
 obj-$(CONFIG_USB_LANGWELL)	+= langwell_udc.o
-
 #
 # USB gadget drivers
 #
@@ -52,4 +52,4 @@ obj-$(CONFIG_USB_G_SERIAL)	+= g_serial.o
 obj-$(CONFIG_USB_G_PRINTER)	+= g_printer.o
 obj-$(CONFIG_USB_MIDI_GADGET)	+= g_midi.o
 obj-$(CONFIG_USB_CDC_COMPOSITE) += g_cdc.o
-obj-$(CONFIG_USB_ANDROID)      += g_android.o
\ No newline at end of file
+#obj-$(CONFIG_USB_ANDROID)      += g_android.o
diff --git a/drivers/usb/host/ohci-hcd.c b/drivers/usb/host/ohci-hcd.c
index 0e2a046..9dc606a 100755
--- a/drivers/usb/host/ohci-hcd.c
+++ b/drivers/usb/host/ohci-hcd.c
@@ -1002,10 +1002,10 @@ MODULE_LICENSE ("GPL");
 #define PLATFORM_DRIVER		ohci_hcd_s3c2410_driver
 #endif
 
-#if CONFIG_ARCH_S5PV2XX 
-#include "ohci-s5pv210.c"
-#define PLATFORM_DRIVER		ohci_hcd_s5pv210_driver
-#endif
+//#if CONFIG_ARCH_S5PV2XX 
+//#include "ohci-s5pv210.c"
+//#define PLATFORM_DRIVER		ohci_hcd_s5pv210_driver
+//#endif
 
 #ifdef CONFIG_ARCH_OMAP
 #include "ohci-omap.c"
diff --git a/drivers/usb/host/s3c-otg/s3c-otg-hcdi-kal.h b/drivers/usb/host/s3c-otg/s3c-otg-hcdi-kal.h
index e6c68a2..6621f38 100755
--- a/drivers/usb/host/s3c-otg/s3c-otg-hcdi-kal.h
+++ b/drivers/usb/host/s3c-otg/s3c-otg-hcdi-kal.h
@@ -50,17 +50,17 @@ extern	volatile 	u8 *		g_pUDCBase;
 extern 	struct		usb_hcd*	g_pUsbHcd;
 
 
-#if defined(__linux__)
+//#if defined(__linux__)
 
 #include <linux/spinlock.h>
 #define		SPINLOCK_t			spinlock_t
 #define 	SPIN_LOCK_INIT		SPIN_LOCK_UNLOCKED
 
-#else
+//#else
 
-#error Not supported OS
+//#error Not supported OS
 
-#endif
+//#endif
 
 #define		spin_lock_otg(lock)			spin_lock(lock)
 #define 	spin_lock_irg_otg(lock)			spin_lock_irq(lock)	
diff --git a/drivers/usb/host/s3c-otg/s3c-otg-hcdi-list.h b/drivers/usb/host/s3c-otg/s3c-otg-hcdi-list.h
index d3731cd..8c082c9 100755
--- a/drivers/usb/host/s3c-otg/s3c-otg-hcdi-list.h
+++ b/drivers/usb/host/s3c-otg/s3c-otg-hcdi-list.h
@@ -37,17 +37,17 @@ extern "C"
 #include "s3c-otg-common-common.h"
 #include "s3c-otg-hcdi-debug.h"
 
-#if defined(__linux__)
+//#if defined(__linux__)
 
 #include <linux/list.h>
 
 typedef   struct  list_head    otg_list_head;
 
-#else
+//#else
 
-#error Not supported OS
+//#error Not supported OS
 
-#endif
+//#endif
 
 #define	otg_list_get_node(ptr, type, member) container_of(ptr, type, member)
 
diff --git a/fs/hostfs/Makefile b/fs/hostfs/Makefile
index d5beaff..a3039ec 100755
--- a/fs/hostfs/Makefile
+++ b/fs/hostfs/Makefile
@@ -8,4 +8,4 @@ hostfs-objs := hostfs_kern.o hostfs_user.o
 obj-y :=
 obj-$(CONFIG_HOSTFS) += hostfs.o
 
-include arch/um/scripts/Makefile.rules
+# include arch/um/scripts/Makefile.rules
